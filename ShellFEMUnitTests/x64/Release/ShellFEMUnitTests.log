  Using triplet "x64-windows" from "C:\dev\vcpkg\installed\x64-windows\"
  stdafx.cpp
  shellFEMUnitTests.cpp
c:\users\barda\documents\shellfem\shellfem\shellfem\utils.cpp(35): warning C4244: 'argument': conversion from 'double' to '_Ty', possible loss of data
          with
          [
              _Ty=int
          ]
c:\users\barda\documents\shellfem\shellfem\shellfemunittests\shellfemunittests.cpp(28): warning C4244: 'argument': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\users\barda\documents\shellfem\shellfem\shellfemunittests\shellfemunittests.cpp(29): warning C4244: 'argument': conversion from 'Eigen::EigenBase<Derived>::Index' to 'int', possible loss of data
          with
          [
              Derived=Eigen::Matrix<double,-1,-1,0,-1,-1>
          ]
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(56): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(208): note: see declaration of 'fopen'
  c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(23): note: see reference to function template instantiation 'bool igl::readSTL<double,int,double>(const std::string &,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\users\barda\documents\shellfem\shellfem\shellfemunittests\shellfemunittests.cpp(25): note: see reference to function template instantiation 'bool igl::readSTL<Eigen::Matrix<double,-1,-1,0,-1,-1>,Eigen::Matrix<int,-1,-1,0,-1,-1>,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::string &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<int,-1,-1,0,-1,-1>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\list_to_matrix.cpp(22): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(28): note: see reference to function template instantiation 'bool igl::list_to_matrix<double,Eigen::Matrix<double,-1,-1,0,-1,-1>>(const std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1>> &)' being compiled
          with
          [
              _Ty=double
          ]
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(193): warning C4267: 'argument': conversion from 'size_t' to '_Ty', possible loss of data
          with
          [
              _Ty=int
          ]
  c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(63): note: see reference to function template instantiation 'bool igl::readSTL<double,int,double>(FILE *,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
  c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(23): note: see reference to function template instantiation 'bool igl::readSTL<double,int,double>(const std::string &,std::vector<std::vector<double,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,std::vector<std::vector<int,std::allocator<int>>,std::allocator<std::vector<int,std::allocator<int>>>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &)' being compiled
          with
          [
              _Ty=double
          ]
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(95): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(2263): note: see declaration of 'sscanf'
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(150): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1197): note: see declaration of 'fscanf'
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(169): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1197): note: see declaration of 'fscanf'
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(179): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1197): note: see declaration of 'fscanf'
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(187): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1197): note: see declaration of 'fscanf'
c:\users\barda\documents\shellfem\shellfem\dep\include\igl\readstl.cpp(205): warning C4996: 'fscanf': This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1197): note: see declaration of 'fscanf'
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/LTCG' specification
     Creating library C:\Users\barda\Documents\ShellFEM\ShellFEM\x64\Release\ShellFEMUnitTests.lib and object C:\Users\barda\Documents\ShellFEM\ShellFEM\x64\Release\ShellFEMUnitTests.exp
  Generating code
  1200 of 1230 functions (97.6%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    2 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  ShellFEMUnitTests.vcxproj -> C:\Users\barda\Documents\ShellFEM\ShellFEM\x64\Release\ShellFEMUnitTests.dll
